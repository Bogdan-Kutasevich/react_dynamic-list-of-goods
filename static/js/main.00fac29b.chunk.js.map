{"version":3,"sources":["GoodsList.tsx","api/goods.ts","types/Select.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","dataError","className","map","good","style","color","name","id","getAll","fetch","then","response","json","Select","get5First","a","result","sort","prevGood","nextGood","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","setDataError","getData","method","all","firstFive","onlyRed","data","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"oQAQaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,OACE,qCACGA,GAAa,mBAAGC,UAAU,wBAAb,4BACbF,GACC,oBAAIE,UAAU,QAAd,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OACrBJ,UAAU,OAJZ,SAMGE,EAAKG,MALDH,EAAKI,e,OCXjB,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICVKC,EDUCC,EAAS,uCAAG,4BAAAC,EAAA,sEACFP,IADE,cACjBQ,EADiB,yBAGhB,YAAIA,GACRC,MAAK,SAACC,EAAUC,GAAX,OACJD,EAASZ,KAAKc,cAAcD,EAASb,SAEtCe,MAAM,EAAG,IAPW,2CAAH,qDAUTC,EAAW,uCAAG,4BAAAP,EAAA,sEACJP,IADI,cACnBQ,EADmB,yBAGlBA,EAAOO,QAAO,SAAApB,GAAI,MAAmB,QAAfA,EAAKE,UAHT,2CAAH,sD,SCpBZQ,K,UAAAA,E,sBAAAA,E,mBAAAA,M,KCQL,IAAMW,EAAgB,WAC3B,MAA0BC,mBAAwB,MAAlD,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOzB,EAAP,KAAkB2B,EAAlB,KAEMC,EAAO,uCAAG,WAAOC,GAAP,eAAAd,EAAA,oEAIJc,EAJI,cAKLhB,EAAOiB,IALF,SAQLjB,EAAOkB,UARF,SAWLlB,EAAOmB,QAXF,mCAMKxB,IANL,cAMRyB,EANQ,oDASKnB,IATL,eASRmB,EATQ,qDAYKX,IAZL,eAYRW,EAZQ,oCAeRA,EAAO,KAfC,QAkBZP,EAASO,GAlBG,kDAoBZP,EAAS,MACTC,GAAa,GArBD,0DAAH,sDAyBb,OACE,sBAAK1B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCAEA,wBACEiC,KAAK,SACL,UAAQ,aACRjC,UAAU,sCACVkC,QAAS,kBAAMP,EAAQf,EAAOiB,MAJhC,4BASA,wBACEI,KAAK,SACL,UAAQ,oBACRjC,UAAU,yCACVkC,QAAS,kBAAMP,EAAQf,EAAOkB,YAJhC,gCASA,wBACEG,KAAK,SACL,UAAQ,aACRjC,UAAU,wCACVkC,QAAS,kBAAMP,EAAQf,EAAOmB,UAJhC,4BASA,cAACpC,EAAD,CAAWG,MAAOA,EAAOC,UAAWA,QCjE1CoC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00fac29b.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[] | null;\n  dataError: boolean;\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods, dataError }) => (\n    <>\n      {dataError && <p className=\"error has-text-danger\">Goods not foun</p>}\n      {goods && (\n        <ul className=\"goods\">\n          {goods.map(good => (\n            <li\n              key={good.id}\n              data-cy=\"good\"\n              style={{ color: good.color }}\n              className=\"good\"\n            >\n              {good.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const result = await getAll();\n\n  return [...result]\n    .sort((prevGood, nextGood) => (\n      prevGood.name.localeCompare(nextGood.name)\n    ))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const result = await getAll();\n\n  return result.filter(good => good.color === 'red');\n};\n","export enum Select {\n  all = 'all',\n  firstFive = 'firstFive',\n  onlyRed = 'onlyRed',\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Select } from './types/Select';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | null>(null);\n  const [dataError, setDataError] = useState(false);\n\n  const getData = async (method:Select) => {\n    let data;\n\n    try {\n      switch (method) {\n        case Select.all:\n          data = await getAll();\n          break;\n        case Select.firstFive:\n          data = await get5First();\n          break;\n        case Select.onlyRed:\n          data = await getRedGoods();\n          break;\n        default:\n          data = null;\n      }\n\n      setGoods(data);\n    } catch {\n      setGoods(null);\n      setDataError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        className=\"button is-info is-light is-outlined\"\n        onClick={() => getData(Select.all)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        className=\"button is-primary is-light is-outlined\"\n        onClick={() => getData(Select.firstFive)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        className=\"button is-danger is-light is-outlined\"\n        onClick={() => getData(Select.onlyRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} dataError={dataError} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}